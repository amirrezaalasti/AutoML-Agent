{
  "stats": {
    "submitted": 10,
    "finished": 10,
    "running": 0
  },
  "data": [
    {
      "config_id": 1,
      "instance": null,
      "seed": 209652396,
      "budget": null,
      "cost": -1.7444857358932495,
      "time": 0.11197304725646973,
      "cpu_time": 0.11676999999999893,
      "status": 1,
      "starttime": 1750180283.122695,
      "endtime": 1750180283.236382,
      "additional_info": {}
    },
    {
      "config_id": 1,
      "instance": null,
      "seed": 398764591,
      "budget": null,
      "cost": -1.7371740341186523,
      "time": 0.053999900817871094,
      "cpu_time": 0.07297599999999882,
      "status": 1,
      "starttime": 1750180283.237688,
      "endtime": 1750180283.2927191,
      "additional_info": {}
    },
    {
      "config_id": 2,
      "instance": null,
      "seed": 209652396,
      "budget": null,
      "cost": Infinity,
      "time": 0.0,
      "cpu_time": 12.835891,
      "status": 2,
      "starttime": 1750180283.2942238,
      "endtime": 1750180283.2969,
      "additional_info": {
        "traceback": "Traceback (most recent call last):\n  File \"/opt/anaconda3/envs/SMAC/lib/python3.10/site-packages/smac/runner/target_function_runner.py\", line 190, in run\n    rval = self(config_copy, target_function, kwargs)\n  File \"/opt/anaconda3/envs/SMAC/lib/python3.10/site-packages/smac/runner/target_function_runner.py\", line 264, in __call__\n    return algorithm(config, **algorithm_kwargs)\n  File \"/Users/amirrezaalasti/Desktop/master/semester 2/AutoML-Agent/scripts/AutoMLAgent.py\", line 326, in smac_train_function\n    return train_fn(cfg=config, dataset=dataset, seed=seed)\n  File \"/Users/amirrezaalasti/Desktop/master/semester 2/AutoML-Agent/scripts/generated_codes/generated_train_function.py\", line 82, in train\n    stl = STL(y.flatten(), seasonal=13)  # Assuming seasonal period of 13\n  File \"statsmodels/tsa/stl/_stl.pyx\", line 220, in statsmodels.tsa.stl._stl.STL.__init__\nValueError: Unable to determine period from endog\n",
        "error": "ValueError('Unable to determine period from endog')"
      }
    },
    {
      "config_id": 2,
      "instance": null,
      "seed": 398764591,
      "budget": null,
      "cost": Infinity,
      "time": 0.0,
      "cpu_time": 12.838427,
      "status": 2,
      "starttime": 1750180283.297884,
      "endtime": 1750180283.299038,
      "additional_info": {
        "traceback": "Traceback (most recent call last):\n  File \"/opt/anaconda3/envs/SMAC/lib/python3.10/site-packages/smac/runner/target_function_runner.py\", line 190, in run\n    rval = self(config_copy, target_function, kwargs)\n  File \"/opt/anaconda3/envs/SMAC/lib/python3.10/site-packages/smac/runner/target_function_runner.py\", line 264, in __call__\n    return algorithm(config, **algorithm_kwargs)\n  File \"/Users/amirrezaalasti/Desktop/master/semester 2/AutoML-Agent/scripts/AutoMLAgent.py\", line 326, in smac_train_function\n    return train_fn(cfg=config, dataset=dataset, seed=seed)\n  File \"/Users/amirrezaalasti/Desktop/master/semester 2/AutoML-Agent/scripts/generated_codes/generated_train_function.py\", line 82, in train\n    stl = STL(y.flatten(), seasonal=13)  # Assuming seasonal period of 13\n  File \"statsmodels/tsa/stl/_stl.pyx\", line 220, in statsmodels.tsa.stl._stl.STL.__init__\nValueError: Unable to determine period from endog\n",
        "error": "ValueError('Unable to determine period from endog')"
      }
    },
    {
      "config_id": 1,
      "instance": null,
      "seed": 924231285,
      "budget": null,
      "cost": -1.7452290058135986,
      "time": 0.05511331558227539,
      "cpu_time": 0.07398799999999994,
      "status": 1,
      "starttime": 1750180283.300271,
      "endtime": 1750180283.3563268,
      "additional_info": {}
    },
    {
      "config_id": 3,
      "instance": null,
      "seed": 209652396,
      "budget": null,
      "cost": -0.5669233388376795,
      "time": 0.015078067779541016,
      "cpu_time": 0.012002000000000734,
      "status": 1,
      "starttime": 1750180283.575546,
      "endtime": 1750180283.5914571,
      "additional_info": {}
    },
    {
      "config_id": 3,
      "instance": null,
      "seed": 398764591,
      "budget": null,
      "cost": -0.5669233388376795,
      "time": 0.010602951049804688,
      "cpu_time": 0.010888999999998816,
      "status": 1,
      "starttime": 1750180283.5926,
      "endtime": 1750180283.603998,
      "additional_info": {}
    },
    {
      "config_id": 3,
      "instance": null,
      "seed": 924231285,
      "budget": null,
      "cost": -0.5669233388376795,
      "time": 0.009961843490600586,
      "cpu_time": 0.009997999999999507,
      "status": 1,
      "starttime": 1750180283.605087,
      "endtime": 1750180283.615853,
      "additional_info": {}
    },
    {
      "config_id": 4,
      "instance": null,
      "seed": 209652396,
      "budget": null,
      "cost": -0.5628395080566406,
      "time": 0.11490583419799805,
      "cpu_time": 0.14487699999999926,
      "status": 1,
      "starttime": 1750180283.6174872,
      "endtime": 1750180283.733189,
      "additional_info": {}
    },
    {
      "config_id": 4,
      "instance": null,
      "seed": 398764591,
      "budget": null,
      "cost": -0.5642224550247192,
      "time": 0.12047123908996582,
      "cpu_time": 0.1522919999999992,
      "status": 1,
      "starttime": 1750180283.734554,
      "endtime": 1750180283.855874,
      "additional_info": {}
    }
  ],
  "configs": {
    "1": {
      "batch_size": 64,
      "detrend": "Polynomial",
      "learning_rate": 0.0001640649322,
      "model_type": "GRU",
      "optimizer": "SGD",
      "scaler": "StandardScaler",
      "seasonality_decomp": "None",
      "dropout_rate": 0.3860676749609,
      "momentum": 0.6420511074364,
      "num_layers": 2,
      "num_units": 218
    },
    "2": {
      "batch_size": 256,
      "detrend": "Polynomial",
      "learning_rate": 0.0026089156904,
      "model_type": "LinearRegression",
      "optimizer": "Adam",
      "scaler": "None",
      "seasonality_decomp": "STL",
      "beta_1": 0.8206433424819
    },
    "3": {
      "batch_size": 64,
      "detrend": "Differencing",
      "learning_rate": 0.0003011851816,
      "model_type": "LinearRegression",
      "optimizer": "SGD",
      "scaler": "StandardScaler",
      "seasonality_decomp": "ETS",
      "momentum": 0.0325065590897
    },
    "4": {
      "batch_size": 32,
      "detrend": "Differencing",
      "learning_rate": 0.0002590724561,
      "model_type": "GRU",
      "optimizer": "SGD",
      "scaler": "StandardScaler",
      "seasonality_decomp": "ETS",
      "dropout_rate": 0.4667473261798,
      "momentum": 0.7055493449393,
      "num_layers": 3,
      "num_units": 173
    }
  },
  "config_origins": {
    "1": "Initial Design: Sobol",
    "2": "Initial Design: Sobol",
    "3": "Acquisition Function Maximizer: Local Search",
    "4": "Acquisition Function Maximizer: Local Search"
  }
}