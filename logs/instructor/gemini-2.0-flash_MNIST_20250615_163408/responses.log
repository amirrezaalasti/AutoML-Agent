[2025-06-15 16:34:17] [Metadata: {'dataset_name': 'MNIST'}] dataset_name='MNIST' dataset_tag='image' dataset_instructions=['1. **Data Reshaping:** Reshape the input data to the format (N, 1, 28, 28) suitable for CNNs, where N is the number of samples.', '2. **Data Normalization:** Normalize pixel values by dividing by 255.0 to scale them to the range [0, 1].', '3. **One-Hot Encoding:** Convert the class labels to one-hot encoded vectors.', '1. **Convolutional Filters:** Apply different sizes and numbers of convolutional filters to extract features.', '2. **Pooling Layers:** Experiment with different pooling strategies (e.g., max pooling, average pooling) to reduce dimensionality and extract dominant features.', '3. **Activation Functions:** Use ReLU activation functions to introduce non-linearity.', '1. **Overfitting:** High-capacity models may overfit the training data, requiring regularization techniques (e.g., dropout, batch normalization).', '2. **Computational Cost:** Training deep CNNs can be computationally expensive; consider using GPUs or distributed training.', '3. **Vanishing Gradients:** Deep networks may suffer from vanishing gradients; consider using batch normalization or skip connections.'] openml_url='https://www.openml.org/d/554' recommended_configuration='Based on the provided parameters, a VGG-style CNN architecture is suitable. The model consists of convolutional layers with ReLU activation, max pooling, batch normalization, and dropout. The input is reshaped to (28, 28, 1). The architecture includes convolutional layers with 64, 128, and 256 filters, followed by max pooling and batch normalization. Dense layers with 4096 units and dropout are used before the final softmax layer. Batch size is set to 128, and the model is trained for 5 epochs.' scenario_plan='For the MNIST dataset, given its moderate size and the need for efficient hyperparameter optimization, a MultiFidelityFacade is suitable.\n\n1.  Facade Type: MultiFidelityFacade\n2.  Budget Settings:\n    *   min_budget: 1 (epoch)\n    *   max_budget: 5 (epochs)\n3.  Number of Workers: n_workers = 4 (adjust based on available resources)\n\nHere\'s a sample scenario configuration:\n\nscenario = Scenario(\n    configspace=cs,  # Configuration Space (define hyperparameters here)\n    name="MNIST_experiment",\n    output_directory=Path("output_dir"),\n    walltime_limit=3600,  # Time limit in seconds\n    n_trials=100,       # Number of optimization trials\n    n_workers=4,\n    min_budget=1,\n    max_budget=5\n)\n\n'
--------------------------------------------------------------------------------
