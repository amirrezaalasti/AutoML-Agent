Generate production-grade Python code for a machine learning training function with the following STRICT requirements:

Function signature must be:
def train(cfg: Configuration, seed: int, dataset) -> float

The function must accept a dataset object with the attributes:

dataset.X (features)

dataset.y (labels)

The function must:

Use stratified k-fold cross-validation via sklearn.model_selection.cross_val_score

random_state=seed must be used for reproducibility

Train a classification model compatible with scikit-learn

Compute and return a loss value compatible with SMAC optimization

Lower loss = better performance

Hyperparameter constraints:

Use only hyperparameters defined by the ConfigSpace structure:

learning_rate: categorical, one of 'constant' or 'adaptive'

alpha: float, log-scale

max_iter: integer

eta0: only present if learning_rate == 'constant'

Additional requirements:

The model must support early stopping if max_iter is provided

All required imports must be included

The function must be fully type-annotated, especially the cfg parameter

All used libraries and APIs must be based on the latest scikit-learn versions

Do not include example usage or explanations

Output only the code â€” no extra content

Supporting code snippets already provided:

ConfigSpace definition: {config_space}

SMAC scenario code: {scenario}

Dataset description: {dataset_description}