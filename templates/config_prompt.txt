Generate rigorous production-grade Python code that defines a ConfigurationSpace for classification models meeting the following STRICT requirements:

- The ConfigurationSpace must include conditional hyperparameters as required by the associated training function.
- Ensure proper scaling for numerical parameters by using log-uniform distributions for scale-sensitive hyperparameters.
- Use a categorical hyperparameter for learning rate schedules with the options: "adaptive" and "constant".
- Include interaction constraints between hyperparameters, and hierarchical conditions for optimizer-dependent parameters.
- Default values must match standard scikit-learn defaults.
- Incorporate meta-features derived from {dataset} characteristics.
- Required hyperparameters:
  1. learning_rate: categorical, options ["adaptive", "constant"]
  2. alpha: continuous, log-uniform distribution range [1e-7, 1e-1]
  3. max_iter: integer, range [100, 1000]
  4. eta0: continuous, applicable only when learning_rate is "constant", range [1e-4, 1.0]
  5. early_stopping: boolean, default True
- The code must include all necessary ConfigSpace import statements.
- Include type conversions for SMAC compatibility.
- Implement constraints validator functions.
- Add forbidden clauses to eliminate invalid hyperparameter combinations.
- Ensure seed handling is incorporated consistently.
- Do not include any explanations, example usage, or any content other than the required code. Output the code only.